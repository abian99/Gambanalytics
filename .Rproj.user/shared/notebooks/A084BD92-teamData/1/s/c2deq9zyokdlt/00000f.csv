"0","current_week = 14"
"0","current_season_schedule <- fast_scraper_schedules(2022)"
"0","current_week_counter = 5"
"0",""
"0","temp_team_schedule <- schedule_df %>%"
"0","  filter(week < 5)"
"0",""
"0","temp_league_schedule <- current_season_schedule %>%"
"0","  filter(week == 5)"
"0",""
"0","temp_team_df <- return_team_df(temp_team_schedule)"
"2","`summarise()` has grouped output by 'team'. You can override using the `.groups` argument."
"0","baseline_predictor_df <- return_predictor_df(temp_league_schedule, temp_team_df, avg_points)"
"0",""
"0","while (current_week_counter < current_week) {"
"0","  temp_team_schedule2 <- schedule_df %>%"
"0","    filter(week < current_week_counter)"
"0","  "
"0","  temp_league_schedule <- current_season_schedule %>%"
"0","    filter(week == current_week_counter)"
"0","  "
"0","  temp_team_df <- return_team_df(temp_team_schedule2)"
"0","  baseline_predictor_df <- rbind(baseline_predictor_df, return_predictor_df(temp_league_schedule, temp_team_df, avg_points))"
"0",""
"0","  current_week_counter = current_week_counter + 1"
"0","}"
"2","`summarise()` has grouped output by 'team'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'team'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'team'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'team'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'team'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'team'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'team'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'team'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'team'. You can override using the `.groups` argument."
