"0","team_df <- schedule_df %>%"
"0","  group_by(team) %>%"
"0","  mutate("
"0","    oRatio = mean(PointsFor / avg_points),"
"0","    dRatio = mean(PointsAgainst / avg_points),"
"0","    pointsFor = mean(PointsFor),"
"0","    pointsAgainst = mean(PointsAgainst),"
"0","    netPF = mean(PointsFor / dRatio),"
"0","    netPA = mean(PointsAgainst / oRatio),"
"0","    wins = sum(win),"
"0","    losses = sum(win == 0),"
"0","    winPct = wins / (wins + losses),"
"0","    pythWin = ((pointsFor^2.37)/((pointsFor^2.37)+(pointsAgainst^2.37)))*17"
"0","  ) %>%"
"0","  summarize(team,"
"0","            pointsFor,"
"0","            pointsAgainst,"
"0","            netPF,"
"0","            netPA,"
"0","            wins,"
"0","            pythWin,"
"0","            losses,"
"0","            winPct,"
"0","            oRatio,"
"0","            dRatio) %>%"
"0","  unique()"
"2","`summarise()` has grouped output by 'team'. You can override using the `.groups` argument."
"0","ggplot(team_df, aes(x = pointsFor, y = pointsAgainst)) +"
"0","  geom_mean_lines(aes(h_var = pointsFor, v_var = pointsAgainst)) +"
"0","  geom_nfl_logos(aes(team_abbr = team), width = 0.07, alpha = 0.7) +"
"0","  labs(x = ""PointsFor/Game"","
"0","       y = ""PointsAgainst/Game"","
"0","       title = ""2021-2022 NFL Average Points For vs Points Against"") +"
"0","  theme_bw() +"
"0","  theme(plot.title = element_text(size = 12, hjust = 0.5, face = ""bold"")) +"
"0","  scale_y_reverse()"
